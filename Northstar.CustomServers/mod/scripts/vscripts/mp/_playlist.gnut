untyped
global function Playlist_Init

void function Playlist_Init()
{
	// featured mode settings
	AddCallback_OnPlayerRespawned( FeaturedModeSettingsSetupPilotLoadouts )
	
	AddCallback_GameStateEnter( eGameState.Playing, OnGamestartModeSettings)


	// iron lts rules
	if ( HasIronRules() ) 
		Riff_ForceTitanExitEnabled( eTitanExitEnabled.Never )



	foreach(entity player in GetPlayerArray())
	{
		GetTitanLoadoutForPlayer(player)
	}


}



bool function IsFeaturedMode( string modeName  )
{
	return GetCurrentPlaylistVar( "featured_mode_" + modeName ) == "1"
}

void function OnGamestartModeSettings()
{
	foreach (entity player in GetPlayerArray())
	{
		FeaturedModeSettingsSetupPilotLoadouts(player)
	}
}

void function FeaturedModeSettingsSetupPilotLoadouts( entity player)
{
	if ( IsFeaturedMode( "all_holopilot" ) || IsFeaturedMode( "all_grapple" ) || 
		 IsFeaturedMode( "all_phase" ) || IsFeaturedMode( "all_ticks" ) || 
		 IsFeaturedMode( "rocket_arena" ) || IsFeaturedMode( "shotguns_snipers" ) || 
		 IsFeaturedMode( "tactikill" ) || IsFeaturedMode( "amped_tacticals" )||IsFeaturedMode( "BanLogicTest" )  )
		 SetLoadoutGracePeriodEnabled( false )
	
	string gamemode = GameRules_GetGameMode()

	// hope that these are all the Titan spawning modes
	if ( player.IsTitan() || gamemode == LAST_TITAN_STANDING || gamemode == TITAN_BRAWL )
	{
		return
	}
	else if(GetGameState() == eGameState.Prematch)
	{
		// I think this could solve a bug where the game crashes when you use the mod for the first time running  
		SetActiveTitanLoadout(player)
		
		return
	}

	bool shouldChangeLoadout = false


	// create loadout struct
	PilotLoadoutDef modifiedLoadout = clone GetActivePilotLoadout( player )

	if ( IsFeaturedMode( "all_holopilot" ) )
	{
		shouldChangeLoadout = true 
		
		modifiedLoadout.special = "mp_ability_holopilot"
	}
		
	if ( IsFeaturedMode( "all_grapple" ) ) 
	{
		shouldChangeLoadout = true 
		
		modifiedLoadout.special = "mp_ability_grapple"
		modifiedLoadout.specialMods = [ "all_grapple" ]
	}
		
	if ( IsFeaturedMode( "all_phase" ) ) 
	{
		shouldChangeLoadout = true 
		
		modifiedLoadout.special = "mp_ability_shifter"
		modifiedLoadout.specialMods = [ "all_phase" ]
	}
		
	if ( IsFeaturedMode( "all_ticks" ) ) 
	{
		shouldChangeLoadout = true 
		
		modifiedLoadout.ordnance = "mp_weapon_frag_drone"
		modifiedLoadout.ordnanceMods = [ "all_ticks" ]
	}
	
	if ( IsFeaturedMode( "rocket_arena" ) )
	{	
		// this crashes sometimes for some reason
	
		shouldChangeLoadout = true
	
		// have to set attachments too, otherwise we could give invalid mods for this weapon
		modifiedLoadout.primary = "mp_weapon_epg"
		modifiedLoadout.primaryMods = [ "rocket_arena" ]
		modifiedLoadout.primaryAttachments = [ "" ]
		
		// set secondary to whatever one is pistol
		if ( GetWeaponInfoFileKeyField_Global( player.GetMainWeapons()[ 1 ].GetWeaponClassName(), "menu_category" ) == "at" )
		{
			modifiedLoadout.weapon3 = "mp_weapon_autopistol"
			modifiedLoadout.weapon3Mods = [ "rocket_arena" ]
		}
		else
		{
			modifiedLoadout.secondary = "mp_weapon_autopistol"
			modifiedLoadout.secondaryMods = [ "rocket_arena" ]
		}
		
		modifiedLoadout.meleeMods = [ "rocket_arena" ]
		
		player.GiveExtraWeaponMod( "rocket_arena" )
	}
	
	if ( IsFeaturedMode( "shotguns_snipers" ) )
	{
	
		shouldChangeLoadout = true 
		
		// this one was never released, assuming it just gives you a mastiff and a kraber with quick swap
		modifiedLoadout.primary = "mp_weapon_sniper"
		modifiedLoadout.primaryMods = [ "pas_fast_swap", "pas_fast_ads" ]
		modifiedLoadout.primaryAttachments = [ "" ]
		
		// set secondary to whatever one is pistol
		if ( GetWeaponInfoFileKeyField_Global( player.GetMainWeapons()[ 1 ].GetWeaponClassName(), "menu_category" ) == "at" )
		{
			modifiedLoadout.weapon3 = "mp_weapon_mastiff"
			modifiedLoadout.weapon3Mods = [ "pas_fast_swap", "pas_run_and_gun" ]
		}
		else
		{
			modifiedLoadout.secondary = "mp_weapon_mastiff"
			modifiedLoadout.secondaryMods = [ "pas_fast_swap", "pas_run_and_gun" ]
		}
	}
}